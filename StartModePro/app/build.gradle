apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
// mylibrary/src/main/resources/META-INF.gradle-plugins/文件名.properties
// 文件名就是插件名称
apply plugin: 'com.zjt.android'
//apply plugin: 'com.zjt.asm'
//apply plugin: 'com.alibaba.arouter'

//apply plugin: 'com.zjt.zrouter'


def isNeedZhujt = true

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.zjt.startmodepro"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    sourceSets {
        main {
            java.srcDirs "src/main/java"
            java.srcDirs "src/main/kotlin"
            res.srcDirs "src/main/res"
            if (isNeedZhujt) {
                java.srcDirs "src/zhujt/java" // 新建一个跟 main 平行的目录
                res.srcDirs "src/zhujt/res"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", "*.arr"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
//    implementation files('libs/17.jar')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    if (!isRunAlone.toBoolean()) {
        // 全量模式
        runtimeOnly project(path: ':user')
    } else {
        // 开发模式，为了加快编译数据，其他的业务模块可以不用编译
        runtimeOnly project(path: ':user')
        //        runtimeOnly project(path: ':meet')
        //        runtimeOnly project(path: ':token')
    }

    implementation project(path: ':base')
    implementation project(path: ':user_api')

    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
    implementation 'com.parse.bolts:bolts-tasks:1.4.0'


    // CameraX core library.
    def camerax_version = "1.0.0-beta03"
    implementation "androidx.camera:camera-core:${camerax_version}"
    // If you want to use Camera2 extensions.
    implementation "androidx.camera:camera-camera2:${camerax_version}"

    implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.31"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.31"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0-1.4.0-rc-95"

}